//reset 重置全局样式
* {
    box-sizing: border-box;
    outline: none;
  }
  
  //定义html的字体大小
  html {
    font-size: 16px;
  }
  
  //初始化body的margin和padding为0
  body {
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
  }
  
  a {
    color: #999;
  }
  
  // colors
  //定义scss变量$colors
  $colors: (
    'primary': #db9e3f,
    'white': #fff,
    'light': #f9f9f9,
    'grey': #999,
    'dark': #222,
    'dark-1': #343440,
    'black': #000
  );
  
  //使用@each遍历colors对象
  @each $colorkey, $color in $colors {
    .text-#{$colorkey} {
      color: $color;
    }
    .bg-#{$colorkey} {
      background-color: $color;
    }
  }
  
  // text align
  @each $var in (left, center, right) {
    .text-#{$var} {
      text-align: $var;
    }
  }
  
  // font size
  $base-font-size: 1rem;
  $font-sizes: (
    xs: 0.7692,
    sm: 0.9231,
    dm: 1,
    lg: 1.0769,
    xl: 1.2308,
  
    );
  
  @each $sizekey, $size in $font-sizes {
    .fs-#{$sizekey} {
      font-size: $size * $base-font-size;
    }
  }
  
  
  // flex 定义容器为flex布局
  .d-flex {
    display: flex;
  }
  
  .flex-column {
    flex-direction: column;
  }
  
  .flex-1 {
    flex: 1;
  }
  
  $flex-jc: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    arouind: space-around,
  );
  
  @each $key, $value in $flex-jc {
    .jc-#{$key} {
      justify-content: $value;
  
    }
  }
  
  $flex-ai: (
    start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch,
  );
  
  @each $key, $value in $flex-ai {
    .ai-#{$key} {
      align-items: $value;
  
    }
  }
  
  // spacing
  // 0-5 .mt-1 => margin-top
  $spacing-base-size: 1rem;
  $spacing-types: (m: margin, p: padding);
  $spacing-directions: (t: top, b: bottom, l: left, r: right);
  $spacing-sizes: (
    0: 0,
    1: 0.25,
    2: 0.5,
    3: 1,
    4: 1.5,
    5: 3
  );
  
  @each $typekey, $type in $spacing-types {
    // .m-1
    @each $sizekey, $size in $spacing-sizes {
      .#{$typekey}-#{$sizekey} {
        #{$type}: $size * $spacing-base-size;
      }
    }
  
    // .mx-1, my-1
    @each $sizekey, $size in $spacing-sizes {
      .#{$typekey}x-#{$sizekey} {
        #{$type}-left: $size * $spacing-base-size;
        #{$type}-right: $size * $spacing-base-size;
      }
      .#{$typekey}y-#{$sizekey} {
        #{$type}-top: $size * $spacing-base-size;
        #{$type}-bottom: $size * $spacing-base-size;
      }
    }
  
    // .mt-1
    @each $directionkey, $direction in $spacing-directions {
      @each $sizekey, $size in $spacing-sizes {
        .#{$typekey}#{$directionkey}-#{$sizekey} {
          #{$type}-#{$direction}: $size * $spacing-base-size;
        }
      }
    }
  } 